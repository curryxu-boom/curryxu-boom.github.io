(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{1206:function(e,r,a){"use strict";a.r(r);var t=a(4),s=Object(t.a)({},(function(){var e=this,r=e._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"消息队列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#消息队列"}},[e._v("#")]),e._v(" 消息队列")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-mq/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("yudao-spring-boot-starter-mq")]),e._v(" "),r("OutboundLink")],1),e._v("技术组件，基于 Redis 实现分布式消息队列：")]),e._v(" "),r("ul",[r("li",[e._v("使用 "),r("a",{attrs:{href:"http://www.redis.cn/topics/streams-intro.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Stream "),r("OutboundLink")],1),e._v("特性，提供【集群】消费的能力。")]),e._v(" "),r("li",[e._v("使用 "),r("a",{attrs:{href:"http://www.redis.cn/topics/pubsub.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Pub/Sub "),r("OutboundLink")],1),e._v("特性，提供【广播】消费的能力。")])]),e._v(" "),r("p",[e._v("友情提示：")]),e._v(" "),r("p",[e._v("考虑到有部分同学对分布式消息队列了解的不多，所以在下文的广播消费、集群消费的描述，去除【消费者分组】的概念。如果你对这块感兴趣，可以看看艿艿写的系列文章：")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"http://www.iocoder.cn/Spring-Boot/RocketMQ/?yudao",target:"_blank",rel:"noopener noreferrer"}},[e._v("《芋道 Spring Boot 消息队列 RocketMQ 入门》 "),r("OutboundLink")],1),e._v("对应 "),r("a",{attrs:{href:"https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-31",target:"_blank",rel:"noopener noreferrer"}},[e._v("lab-31"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.iocoder.cn/Spring-Boot/Kafka/?yudao",target:"_blank",rel:"noopener noreferrer"}},[e._v("《芋道 Spring Boot 消息队列 Kafka 入门》 "),r("OutboundLink")],1),e._v("对应 "),r("a",{attrs:{href:"https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-03-kafka",target:"_blank",rel:"noopener noreferrer"}},[e._v("lab-03-kafka"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.iocoder.cn/Spring-Boot/RabbitMQ/?yudao",target:"_blank",rel:"noopener noreferrer"}},[e._v("《芋道 Spring Boot 消息队列 RabbitMQ 入门》 "),r("OutboundLink")],1),e._v("对应 "),r("a",{attrs:{href:"https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-04-rabbitmq",target:"_blank",rel:"noopener noreferrer"}},[e._v("lab-04-rabbitmq"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.iocoder.cn/Spring-Boot/ActiveMQ/?yudao",target:"_blank",rel:"noopener noreferrer"}},[e._v("《芋道 Spring Boot 消息队列 ActiveMQ 入门》 "),r("OutboundLink")],1),e._v("对应 "),r("a",{attrs:{href:"https://github.com/YunaiV/SpringBoot-Labs/tree/master/lab-32",target:"_blank",rel:"noopener noreferrer"}},[e._v("lab-32"),r("OutboundLink")],1)])]),e._v(" "),r("h2",{attrs:{id:"_1-集群消费"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-集群消费"}},[e._v("#")]),e._v(" 1. 集群消费")]),e._v(" "),r("p",[e._v("集群消费，是指消息发送到 Redis 时，有且只会被一个消费者（应用 JVM 实例）收到，然后消费成功。如下图所示：")]),e._v(" "),r("img",{attrs:{src:a(604)}}),e._v(" "),r("h3",{attrs:{id:"_1-1-使用场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-使用场景"}},[e._v("#")]),e._v(" 1.1 使用场景")]),e._v(" "),r("p",[e._v("集群消费在项目中的使用场景，主要是提供可靠的、可堆积的异步任务的能力。例如说：")]),e._v(" "),r("ul",[r("li",[e._v("短信模块，使用它"),r("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/mq/consumer/sms/SmsSendConsumer.java",target:"_blank",rel:"noopener noreferrer"}},[e._v("异步 "),r("OutboundLink")],1),e._v("发送短信。")]),e._v(" "),r("li",[e._v("邮件模块，使用它"),r("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/mq/consumer/mail/MailSendConsumer.java",target:"_blank",rel:"noopener noreferrer"}},[e._v("异步 "),r("OutboundLink")],1),e._v("发送邮件。")])]),e._v(" "),r("p",[e._v("相比 "),r("a",{attrs:{href:"https://doc.iocoder.cn/async-task",target:"_blank",rel:"noopener noreferrer"}},[e._v("《开发指南 —— 异步任务》"),r("OutboundLink")],1),e._v(" 来说，Spring Async 在 JVM 实例重启时，会导致未执行完的任务丢失。而集群消费，因为消息是存储在 Redis 中，所以不会存在该问题。")]),e._v(" "),r("h3",{attrs:{id:"_1-2-实现源码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-实现源码"}},[e._v("#")]),e._v(" 1.2 实现源码")]),e._v(" "),r("p",[e._v("集群消费基于 Redis Stream 实现：")]),e._v(" "),r("ul",[r("li",[e._v("实现 "),r("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-mq/src/main/java/cn/iocoder/yudao/framework/mq/core/stream/AbstractStreamMessage.java",target:"_blank",rel:"noopener noreferrer"}},[e._v("AbstractStreamMessage "),r("OutboundLink")],1),e._v("抽象类，定义【集群】消息。")]),e._v(" "),r("li",[e._v("使用 "),r("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-mq/src/main/java/cn/iocoder/yudao/framework/mq/core/RedisMQTemplate.java",target:"_blank",rel:"noopener noreferrer"}},[e._v("RedisMQTemplate "),r("OutboundLink")],1),e._v("的 "),r("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-mq/src/main/java/cn/iocoder/yudao/framework/mq/core/RedisMQTemplate.java#L48-L64",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("#send(message)")]),e._v(" "),r("OutboundLink")],1),e._v("方法，发送消息。")]),e._v(" "),r("li",[e._v("实现 "),r("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-mq/src/main/java/cn/iocoder/yudao/framework/mq/core/stream/AbstractStreamMessageListener.java",target:"_blank",rel:"noopener noreferrer"}},[e._v("AbstractStreamMessageListener "),r("OutboundLink")],1),e._v("接口，消费消息。")])]),e._v(" "),r("p",[e._v("最终使用 "),r("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-mq/src/main/java/cn/iocoder/yudao/framework/mq/config/YudaoMQAutoConfiguration.java",target:"_blank",rel:"noopener noreferrer"}},[e._v("YudaoMQAutoConfiguration "),r("OutboundLink")],1),e._v("配置类，扫描所有的 AbstractStreamMessageListener 监听器，初始化对应的消费者。如下图所示：")]),e._v(" "),r("img",{attrs:{src:a(605)}}),e._v(" "),r("h3",{attrs:{id:"_1-3-实战案例"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-实战案例"}},[e._v("#")]),e._v(" 1.3 实战案例")]),e._v(" "),r("p",[e._v("以短信模块异步发送短息为例子，讲解集群消费的使用。")]),e._v(" "),r("img",{attrs:{src:a(606)}}),e._v(" "),r("h4",{attrs:{id:"_1-3-1-引入依赖"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-1-引入依赖"}},[e._v("#")]),e._v(" 1.3.1 引入依赖")]),e._v(" "),r("p",[e._v("在 "),r("code",[e._v("yudao-module-system-biz")]),e._v(" 模块中，引入 "),r("code",[e._v("yudao-spring-boot-starter-mq")]),e._v(" 技术组件。如下所示：")]),e._v(" "),r("div",{staticClass:"language-xml line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-xml"}},[r("code",[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("dependency")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n    "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("groupId")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("cn.iocoder.boot"),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("</")]),e._v("groupId")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n    "),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("artifactId")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("yudao-spring-boot-starter-mq"),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("</")]),e._v("artifactId")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token tag"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("</")]),e._v("dependency")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br")])]),r("h4",{attrs:{id:"_1-3-2-smssendmessage"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-2-smssendmessage"}},[e._v("#")]),e._v(" 1.3.2 SmsSendMessage")]),e._v(" "),r("p",[e._v("在 "),r("code",[e._v("yudao-module-system-biz")]),e._v(" 的 "),r("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/mq/message/sms/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("mq/message/sms")]),e._v(" "),r("OutboundLink")],1),e._v("包下，创建 "),r("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/mq/message/sms/SmsSendMessage.java",target:"_blank",rel:"noopener noreferrer"}},[e._v("SmsSendMessage "),r("OutboundLink")],1),e._v("类，继承 AbstractStreamMessage 抽象类，短信发送消息。代码如下图：")]),e._v(" "),r("img",{attrs:{src:a(607)}}),e._v(" "),r("h4",{attrs:{id:"_1-3-3-smsproducer"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-3-smsproducer"}},[e._v("#")]),e._v(" 1.3.3 SmsProducer")]),e._v(" "),r("p",[e._v("① 在 "),r("code",[e._v("yudao-module-system-biz")]),e._v(" 的 "),r("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/mq/producer/sms/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("mq/producer/sms")]),e._v(" "),r("OutboundLink")],1),e._v("包下，创建 "),r("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/tree/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/mq/producer/sms",target:"_blank",rel:"noopener noreferrer"}},[e._v("SmsProducer "),r("OutboundLink")],1),e._v("类，SmsSendMessage 的 Producer 生产者，核心是使用 RedisMQTemplate 发送 SmsSendMessage 消息。代码如下图：")]),e._v(" "),r("img",{attrs:{src:a(608)}}),e._v(" "),r("p",[e._v("② 发送短信时，需要使用 SmsProducer 发送消息。如下图所示：")]),e._v(" "),r("img",{attrs:{src:a(609)}}),e._v(" "),r("h4",{attrs:{id:"_1-3-4-smssendconsumer"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-4-smssendconsumer"}},[e._v("#")]),e._v(" 1.3.4 SmsSendConsumer")]),e._v(" "),r("p",[e._v("在 "),r("code",[e._v("yudao-module-system-biz")]),e._v(" 的 "),r("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/mq/consumer/sms/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("mq/consumer/sms")]),e._v(" "),r("OutboundLink")],1),e._v("包下，创建 "),r("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/mq/consumer/sms/SmsSendConsumer.java",target:"_blank",rel:"noopener noreferrer"}},[e._v("SmsSendConsumer "),r("OutboundLink")],1),e._v("类，SmsSendMessage 的 Consumer 消费者。代码如下图：")]),e._v(" "),r("img",{attrs:{src:a(610)}}),e._v(" "),r("h2",{attrs:{id:"_2-广播消费"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-广播消费"}},[e._v("#")]),e._v(" 2. 广播消费")]),e._v(" "),r("p",[e._v("广播消费，是指消息发送到 Redis 时，所有消费者（应用 JVM 实例）收到，然后消费成功。如下图所示：")]),e._v(" "),r("img",{attrs:{src:a(611)}}),e._v(" "),r("h3",{attrs:{id:"_2-1-使用场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-使用场景"}},[e._v("#")]),e._v(" 2.1 使用场景")]),e._v(" "),r("p",[e._v("例如说，在应用中，缓存了数据字典等配置表在内存中，可以通过 Redis 广播消费，实现每个应用节点都消费消息，刷新本地内存的缓存。")]),e._v(" "),r("p",[e._v("又例如说，我们基于 WebSocket 实现了 IM 聊天，在我们给用户主动发送消息时，因为我们不知道用户连接的是哪个提供 WebSocket 的应用，所以可以通过 Redis 广播消费。每个应用判断当前用户是否是和自己提供的 WebSocket 服务连接，如果是，则推送消息给用户。")]),e._v(" "),r("h3",{attrs:{id:"_2-2-实现源码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-实现源码"}},[e._v("#")]),e._v(" 2.2 实现源码")]),e._v(" "),r("p",[e._v("广播消费基于 Redis Pub/Sub 实现：")]),e._v(" "),r("ul",[r("li",[e._v("实现 "),r("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-mq/src/main/java/cn/iocoder/yudao/framework/mq/core/pubsub/AbstractChannelMessage.java",target:"_blank",rel:"noopener noreferrer"}},[e._v("AbstractChannelMessage "),r("OutboundLink")],1),e._v("抽象类，定义【广播】消息。")]),e._v(" "),r("li",[e._v("使用 "),r("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-mq/src/main/java/cn/iocoder/yudao/framework/mq/core/RedisMQTemplate.java",target:"_blank",rel:"noopener noreferrer"}},[e._v("RedisMQTemplate "),r("OutboundLink")],1),e._v("的 "),r("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-mq/src/main/java/cn/iocoder/yudao/framework/mq/core/RedisMQTemplate.java#L33-L46",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("#send(message)")]),e._v(" "),r("OutboundLink")],1),e._v("方法，发送消息。")]),e._v(" "),r("li",[e._v("实现 "),r("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-mq/src/main/java/cn/iocoder/yudao/framework/mq/core/pubsub/AbstractChannelMessageListener.java",target:"_blank",rel:"noopener noreferrer"}},[e._v("AbstractChannelMessageListener "),r("OutboundLink")],1),e._v("接口，消费消息。")])]),e._v(" "),r("p",[e._v("最终使用 "),r("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-mq/src/main/java/cn/iocoder/yudao/framework/mq/config/YudaoMQAutoConfiguration.java",target:"_blank",rel:"noopener noreferrer"}},[e._v("YudaoMQAutoConfiguration "),r("OutboundLink")],1),e._v("配置类，扫描所有的 AbstractChannelMessageListener 监听器，初始化对应的消费者。如下图所示：")]),e._v(" "),r("img",{attrs:{src:a(612)}}),e._v(" "),r("h3",{attrs:{id:"_2-3-实战案例"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-实战案例"}},[e._v("#")]),e._v(" 2.3 实战案例")]),e._v(" "),r("p",[e._v("参见 "),r("a",{attrs:{href:"https://doc.iocoder.cn/local-cache",target:"_blank",rel:"noopener noreferrer"}},[e._v("《开发指南 —— 本地缓存》"),r("OutboundLink")],1)])])}),[],!1,null,null,null);r.default=s.exports},604:function(e,r,a){e.exports=a.p+"assets/img/img_201.9b2cb6fc.png"},605:function(e,r,a){e.exports=a.p+"assets/img/img_202.023c0471.png"},606:function(e,r,a){e.exports=a.p+"assets/img/img_203.cedcb1dc.png"},607:function(e,r,a){e.exports=a.p+"assets/img/img_204.9ecb823d.png"},608:function(e,r,a){e.exports=a.p+"assets/img/img_205.04adbde3.png"},609:function(e,r,a){e.exports=a.p+"assets/img/img_206.173a6f9a.png"},610:function(e,r,a){e.exports=a.p+"assets/img/img_207.d701e60b.png"},611:function(e,r,a){e.exports=a.p+"assets/img/img_208.40935cd2.png"},612:function(e,r,a){e.exports=a.p+"assets/img/img_209.39415d13.png"}}]);